# Recibimos logs desde Filebeat (asegurarse de que pueda acceder al puerto)
input{
    beats {
        port => "5085"
    }
}

filter{
    # Descomponemos la línea de log en campos mediante Grok
    #he modificado el grok para que se ajuste a los log de springboot
    grok {
                match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} +%{LOGLEVEL:log_level} *\[%{DATA:application},*%{DATA:emisor},*%{DATA:mensaje1}\] +%{NUMBER:pid} *--- *\[%{DATA:thread}\] +%{JAVACLASS:class} +%{GREEDYDATA:log_message}" }
            }

    # Tratamos la fecha y la metemos en el campo especial @timestamp
    date {
         match => [ "timestamp" , "ISO8601" ]
         target => "@timestamp"
         locale => "en"
         timezone => "Europe/Madrid"
    }

    # Eliminamos campos ya no necesarios una vez procesado el mensaje
    # Timestamp porque ya lo hemos atualizado @timestamp con el valor extraído del log
    # message que era el evento de log en crudo porque ya lo hemos procesado
    mutate{
        remove_field => ["timestamp", "message"]
    }

}

filter{
    # Se usa el nivel de log para separar los documentos en varios índices
    # Es necesario que el nombre del índice esté en minúscula así que usamos
    # este filtro y un campo de @metadata para que en el documento final no aparezca
    # el campo auxiliar en minúscula
    mutate{
        copy => ["log_level", "[@metadata][subindex]"]
    }
    mutate{
        lowercase => ["[@metadata][subindex]"]
    }
}

# Indexamos los docs en Elasticsearch
output {
    elasticsearch {
        hosts => ['${ELASTICSEARCH_HOST:localhost:9200}']
        index => "logstash-%{[@metadata][subindex]}-%{+YYYY.MM.dd}"

        # Estas tres líneas para definir un template con el mapping de los índices
        template => "/usr/share/logstash/templates/template.json" # Ruta del template
        template_name => "logstash-template" # Un nombre para identificarlo en ES
        template_overwrite => true # Para que sobreescriba el template si existiera en Elasticsearch con este.
    }
}